\name{procBam}
\alias{procBam}
\alias{procBam-method}
\alias{procBam,list,logical,integer,logical-method}
\alias{procBam,list,logical,missing,logical-method}
\alias{procBam,list,missing,missing,missing-method}
\alias{procBam,list,missing,integer,logical-method}
\alias{procBam,list,missing,integer,missing-method}
\alias{procBam,list,missing,numeric,missing-method}
\alias{procBam,list,logical,integer,missing-method}
\alias{procBam,list,logical,missing,missing-method}
\alias{procBam,list,missing,missing,logical-method}
\docType{methods}
\title{
  Process BAM object
}
\description{
  Process paired-end data stored in BAM object generated by scanBam. 
  Outputs GRanges objects for reads and junctions.
  }
\usage{
procBam(bam, stranded, seed, verbose)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{bam}{
    BAM object generated by \code{scanBam}
  }
  \item{stranded}{
    Set to \code{TRUE} to indicate that the RNA-seq experiment preserved
    the strand information.
  }
  \item{seed}{
    Seed for random number generator
  }
  \item{verbose}{Set to \code{TRUE} to print progress information.}
}
\section{Methods}{
  \describe{
    \item{\code{signature(bam='list',stranded='logical',seed='integer',verbose='logical')}}{
      Process paired-end data stored in BAM object generated by scanBam.
      Outputs GRanges objects for reads and junctions.
    }
  }
}
\details{
One alignment is chosen at random from those multihits with same start position for both reads but different insertions/deletions patterns. 
}
\value{
  An object of class \code{procBam} containing 
  reads with both ends
  correctly aligned and split according to the corresponding CIGAR.
  Unique identifiers by fragment are stored. Junctions spanned by reads
  are also stored in GRanges object.}
\author{
  Camille Stephan-Otto Attolini
}
\seealso{
\code{scanBam} from package \code{Rsamtools}
}
\examples{
##See example in calcExp
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ manip }

